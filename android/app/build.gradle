plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
    id 'dev.flutter.flutter-gradle-plugin'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.smartbiztracker"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

        // ✅ Required for flutter_local_notifications Java 8 features
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.smartbiztracker"
        minSdkVersion 26
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            storeFile file("../../keystore/sama_keystore.jks")
            storePassword "sama123"
            keyAlias "sama_key"
            keyPassword "sama123"
        }
        debug {
            storeFile file("../../keystore/sama_keystore.jks")
            storePassword "sama123"
            keyAlias "sama_key"
            keyPassword "sama123"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }

    // Packaging options
    packagingOptions {
        // Exclude unnecessary files
        jniLibs.excludes.add("**/libopencv_java*.so")
        jniLibs.excludes.add("**/libopenjp2.so")
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:32.7.1')

    // Play Core library for split APKs and deferred components
    implementation 'com.google.android.play:core:1.10.3'
    implementation 'com.google.android.play:core-ktx:1.8.1'

    // Biometric dependencies
    implementation "androidx.biometric:biometric:1.1.0"
    implementation "androidx.fragment:fragment-ktx:1.6.2"

    // Other dependencies can be added here

    // ✅ Enable Java 8 features used by flutter_local_notifications
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
}

// Fix for duplicate class errors
configurations.implementation {
    exclude group: 'com.google.android.play', module: 'core-common'
    exclude group: 'com.google.inject', module: 'guice'
}

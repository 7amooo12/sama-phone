pluginManagement {
    def flutterSdkPath = {
        def properties = new Properties()
        file("local.properties").withInputStream { properties.load(it) }
        def flutterSdkPath = properties.getProperty("flutter.sdk")
        assert flutterSdkPath != null, "flutter.sdk not set in local.properties"
        return flutterSdkPath
    }()

    includeBuild("$flutterSdkPath/packages/flutter_tools/gradle")

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}



include ':app'

def flutterProjectRoot = rootProject.projectDir.parentFile.toPath()

def plugins = new Properties()
def pluginsFile = new File(flutterProjectRoot.toFile(), '.flutter-plugins')
if (pluginsFile.exists()) {
    pluginsFile.withReader('UTF-8') { reader -> plugins.load(reader) }
}

plugins.each { name, path ->
    def pluginDirectory = flutterProjectRoot.resolve(path).resolve('android').toFile()
    include ":$name"
    project(":$name").projectDir = pluginDirectory
}

def flutterSdkPath = System.getenv('FLUTTER_ROOT')
if (flutterSdkPath == null) {
    def localPropertiesFile = new File(flutterProjectRoot.toFile(), 'local.properties')
    if (localPropertiesFile.exists()) {
        Properties properties = new Properties()
        localPropertiesFile.withReader('UTF-8') { reader -> properties.load(reader) }
        flutterSdkPath = properties.getProperty('flutter.sdk')
    }
}

if (flutterSdkPath == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file or with FLUTTER_ROOT environment variable.")
}
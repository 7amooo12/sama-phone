**🔧 برومبت إنشاء مشروع Flutter متكامل بأربعة أدوار (Admin - Client - Worker - Business Owner)**

---

## 🧱 الهيكل العام:

أنشئ تطبيق Flutter كامل متعدد الأدوار يحتوي على:

* تسجيل دخول وتسجيل جديد للمستخدمين.
* انتظار موافقة من المشرف (Admin) بعد التسجيل.
* عند الموافقة، يحدد المشرف دور المستخدم: `Client`, `Worker`, `Owner`, `Admin`.
* لكل دور واجهة مختلفة وتابات مستقلة.
* تصميم أنيق مع دعم اللغة العربية وDark Mode وFloating Buttons متحركة.

---

## 🔐 1. نظام الدخول والموافقة:

### ✅ Signup/Login:

* أي مستخدم يسجل يظهر له رسالة "في انتظار الموافقة".
* يتم إرسال الحساب للـ Admin للمراجعة.

### ✅ Admin View:

* صفحة بها قائمة بالحسابات الجديدة.
* يمكن للمشرف اختيار الموافقة + تحديد نوع الدور (Dropdown):

  * Client
  * Worker
  * Owner

---

## 👤 2. واجهة العميل (Client View):

### Tabs:

1. **المنتجات**

   * جلب من API:
     `https://samastock.pythonanywhere.com/store/`

2. **تتبع الطلب**

   * كل عميل عنده رابط تتبع مخصص (يحدده الـ Admin).
   * لو الرابط مش موجود → تظهر له رسالة: "لا توجد طلبات حالياً".

3. **المرتجع**

   * فورم فيه: اسم البند – الكمية – السبب.
   * تُرسل للـ Admin.

4. **الأعطال**

   * فورم فيه: اسم البند – الكمية – نوع العطل.
   * تُرسل للـ Admin.

5. **خدمة العملاء**

   * شات مباشر بين العميل و الـ Admin.
   * يتم حفظ الرسائل وعرضها للطرفين.

---

## 🛠️ 3. واجهة العامل (Worker View):

### Tabs:

1. **الأعطال**

   * قائمة بجميع الأعطال المرسلة من العملاء.

2. **الطلبات**

   * قائمة بجميع العملاء وطلباتهم (مع روابط التتبع).

3. **إنتاجية اليوم**

   * فورم: اسم البند – عدد القطع المنتجة – إرسال.
   * يتم ربطها بتاريخ اليوم واسم العامل.

4. **الهالك**

   * فورم: اسم البند – الكمية – تفاصيل.
   * تُرسل للـ Admin.

---

## 👔 4. واجهة صاحب العمل (Business Owner View):

### Tabs:

1. **المنتجات**

   * نفس API المنتجات `https://samastock.pythonanywhere.com/store/`

2. **الطلبات**

   * نفس واجهة العامل: قائمة العملاء وطلباتهم.

3. **الهالك**

   * نفس واجهة العامل: فورم عرض للهالك المسجل من العمال.
   * يعرض: اسم البند – الكمية – التفاصيل – التاريخ – اسم العامل.

4. **Dashboard**

   * WebView يفتح: `https://samastock.pythonanywhere.com/admin/`
   * باستخدام تسجيل دخول تلقائي بـ `flutter_inappwebview` وإرسال credentials كـ POST.
   * WebView يفتح: `https://samastock.pythonanywhere.com/admin/`
   * باستخدام تسجيل دخول تلقائي بـ `flutter_inappwebview` وإرسال credentials كـ POST.

---

## 👑 5. واجهة المدير (Admin View):

### Tabs:

1. **المستخدمون الجدد**

   * قائمة بالمستخدمين بانتظار الموافقة.
   * لكل حساب زر "موافقة" + اختيار الدور من قائمة منسدلة.

2. **روابط التتبع**

   * إدخال رابط تتبع لكل عميل.

3. **عرض المرتجعات**

   * قائمة بكل المرتجعات المرسلة من العملاء.

4. **عرض الأعطال**

   * قائمة بجميع الأعطال.

5. **إنتاجية العمال**

   * عرض البيانات المرسلة من التاب الخاص بـ "إنتاجية اليوم".

6. **الهالك**

   * عرض كل ما تم تسجيله من العمال في تاب "الهالك".

7. **خدمة العملاء**

   * عرض محادثات مباشرة من العملاء.

8. **روابط خارجية**

   * زر يفتح:

     * `https://samastock.pythonanywhere.com/auth/login`
     * `https://stockwarehouse.pythonanywhere.com/auth/login`

---

## 🗃️ 6. قاعدة البيانات المقترحة:

### جدول المستخدمين:

```json
{
  "email": "user@example.com",
  "role": "CLIENT" | "WORKER" | "OWNER" | "ADMIN",
  "isApproved": true,
  "trackingLink": "...",
  "chat": [],
  "returns": [...],
  "faults": [...],
  "productivity": [...],
  "waste": [...]
}
```

---

## 🧠 النصائح الذهبية:

1. **بعد كل تشغيل لـ Flutter:**

```bash
flutter clean
flutter pub get
```

2. **حدد الدور بعد الموافقة بدقة:**

```json
"role": "CLIENT" | "WORKER" | "OWNER"
```

3. **افصل كل Message عن باقي البيانات:**

```json
{
  "from": "CLIENT" | "ADMIN",
  "text": "...",
  "timestamp": "..."
}
```

4. **سجل إنتاجية العامل مرتبط بالتاريخ تلقائيًا.**

5. **سجل الهالك باسم العامل والتاريخ والملاحظات.**

6. **للدخول التلقائي في WebView:**

* استخدم `flutter_inappwebview`.
* سجل الدخول برمجيًا بـ `POST` إلى:
  `https://samastock.pythonanywhere.com/auth/login`
* أرسل البيانات:

  ```json
  {
    "username": "admin",
    "password": "mn402729"
  }
  ```
* احفظ الكوكي وتمريره تلقائيًا عند فتح:
  `https://samastock.pythonanywhere.com/admin/`
* ⚠️ **لا تنفذ هذه الخطوة إلا إذا كان المستخدم الحالي دوره OWNER أو ADMIN فقط.**

---

## 🧰 مكتبات Flutter المقترحة:

| مكتبة                    | الاستخدام                 |
| ------------------------ | ------------------------- |
| `flutter_inappwebview`   | فتح روابط + دعم الكوكيز   |
| `provider` أو `riverpod` | إدارة الحالة              |
| `http`                   | جلب البيانات              |
| `shared_preferences`     | تخزين محلي لحالة المستخدم |
| `flutter_hooks`          | تبسيط بناء الواجهة        |
| `intl`                   | دعم التاريخ والهويات      |

---

## 💬 جاهز لتوليد الكود حسب كل واجهة؟

ابدأ من الواجهة اللي تحبها (client / admin / owner / worker) وأنا أجهزها لك فورًا.
